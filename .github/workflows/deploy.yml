name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
        
      - name: Prepare API routes for static build
        run: |
          # Create backup directory
          mkdir -p src/disabled_api
          # Move API routes to backup location if they exist
          if [ -d "src/app/api" ]; then
            cp -r src/app/api src/disabled_api/
            rm -rf src/app/api
          fi
      
      - name: Build
        env:
          # IMPORTANT: Create a repository secret named PAGE_ACCESS_PASSWORD in GitHub
          # Go to your repository -> Settings -> Secrets and variables -> Actions -> New repository secret
          # Name it PAGE_ACCESS_PASSWORD and set it to your desired password for protected pages
          NEXT_PUBLIC_PAGE_ACCESS_PASSWORD: ${{ secrets.PAGE_ACCESS_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run build
        
      - name: Create API placeholder for static site
        run: |
          # Create a placeholder for API routes in the output directory
          mkdir -p out/api
          echo '# API Routes Not Available' > out/api/index.html
          echo 'API endpoints are not available in the static site build.' > out/api/index.html
          
          # Create .nojekyll file to prevent GitHub Pages from using Jekyll
          touch out/.nojekyll
          
          # Create a CNAME file if you're using a custom domain
          # echo "yourdomain.com" > out/CNAME
          
      - name: Restore API routes in source code
        run: |
          # Restore API routes to the source code for reference
          if [ -d "src/disabled_api/api" ]; then
            mkdir -p src/app/api
            cp -r src/disabled_api/api/* src/app/api/
            # Add README explaining the situation
            echo '# API Routes in Static Exports\n\nThese API routes are not used in the static export build.\n\nInstead, client-side authentication is used.' > src/app/api/README.md
          fi
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out
  
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
